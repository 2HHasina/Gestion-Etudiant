[{"/Users/aanbari/Desktop/Gestion-Etudiant/src/index.js":"1","/Users/aanbari/Desktop/Gestion-Etudiant/src/reportWebVitals.js":"2","/Users/aanbari/Desktop/Gestion-Etudiant/src/App.js":"3","/Users/aanbari/Desktop/Gestion-Etudiant/src/components/auth/SignIn.js":"4","/Users/aanbari/Desktop/Gestion-Etudiant/src/components/Etudiant/Dashboard.js":"5","/Users/aanbari/Desktop/Gestion-Etudiant/src/components/Etudiant/Reporting.js":"6","/Users/aanbari/Desktop/Gestion-Etudiant/src/components/Etudiant/Logout.js":"7","/Users/aanbari/Desktop/Gestion-Etudiant/src/components/Etudiant/Home.js":"8","/Users/aanbari/Desktop/Gestion-Etudiant/src/components/Etudiant/Service.js":"9"},{"size":478,"mtime":1612603436000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1612532551000,"results":"12","hashOfConfig":"11"},{"size":284,"mtime":1612603599000,"results":"13","hashOfConfig":"11"},{"size":2110,"mtime":1612532551000,"results":"14","hashOfConfig":"11"},{"size":2394,"mtime":1612603569000,"results":"15","hashOfConfig":"11"},{"size":158,"mtime":1612532768000,"results":"16","hashOfConfig":"11"},{"size":0,"mtime":1612603436000,"results":"17","hashOfConfig":"11"},{"size":180,"mtime":1612532749000,"results":"18","hashOfConfig":"11"},{"size":1779,"mtime":1612603436000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"qxntcw",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/Users/aanbari/Desktop/Gestion-Etudiant/src/index.js",[],["42","43"],"/Users/aanbari/Desktop/Gestion-Etudiant/src/reportWebVitals.js",[],"/Users/aanbari/Desktop/Gestion-Etudiant/src/App.js",[],"/Users/aanbari/Desktop/Gestion-Etudiant/src/components/auth/SignIn.js",["44"],"import React, { Component } from \"react\";\nimport \"../../style/Auth.css\";\nimport { Form, Input, Button } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  handleSubmit = () => {\n      console.log(this.state)\n  }\n\n  render() {\n\n    return (\n      <div className=\"content\">\n        <Form\n          name=\"normal_login\"\n          className=\"login-form\"\n        onFinish={this.handleSubmit}\n        >\n          <div className=\"icon\">\n            <i className=\"fas fa-user-lock\"></i>\n          </div>\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Email!\",\n              },\n            ]}\n            onChange={this.handleChange}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Email\"\n              name=\"email\"\n              onChange={this.handleChange}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Password!\",\n              },\n            ]}\n            >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Log in\n            </Button>\n            <div className=\"link\">\n              Or\n              <br />\n              <a href=\"\">Register now!</a>\n            </div>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n",["45","46"],"/Users/aanbari/Desktop/Gestion-Etudiant/src/components/Etudiant/Dashboard.js",[],"/Users/aanbari/Desktop/Gestion-Etudiant/src/components/Etudiant/Reporting.js",[],"/Users/aanbari/Desktop/Gestion-Etudiant/src/components/Etudiant/Logout.js",[],"/Users/aanbari/Desktop/Gestion-Etudiant/src/components/Etudiant/Home.js",[],"/Users/aanbari/Desktop/Gestion-Etudiant/src/components/Etudiant/Service.js",["47"],"import React,{useState} from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst validateMessages = {\n  required: '${label} is required!',\n};\n\nconst Service = () => {\n    const [cin, setCin] = useState('')\n    const [nom, setNom] = useState('')\n    const [prenom, setPrenom] = useState('')\n    const [desc, setDesc] = useState('')\n\n  const onSubmit = () => {\n    console.log(cin);\n    console.log(nom);\n    console.log(prenom);\n    console.log(desc);\n  };\n\n  return (\n    <Form {...layout} name=\"nest-messages\" onFinish={onSubmit} validateMessages={validateMessages}>\n        <Form.Item\n            label=\"CIN\"\n            rules={[\n            {\n                required: true,\n                },\n              ]}\n            >\n              <Input onChange={(e)=> setCin(e.target.value)}/>\n            </Form.Item>\n      <Form.Item\n        label=\"Nom\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input onChange={(e)=> setNom(e.target.value)}/>\n      </Form.Item>\n      <Form.Item\n        label=\"Prenom\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input onChange={(e)=> setPrenom(e.target.value)}/>\n      </Form.Item>\n      <Form.Item label=\"Description\" rules={[\n            {\n                required: true,\n                },\n              ]}>\n        <Input.TextArea onChange={(e)=> setDesc(e.target.value)}/>\n      </Form.Item>\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 4 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Service\n\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":79,"column":15,"nodeType":"54","endLine":79,"endColumn":26},{"ruleId":"48","replacedBy":"55"},{"ruleId":"50","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":13,"column":13,"nodeType":"59","messageId":"60","endLine":13,"endColumn":36},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["61"],["62"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation"]